@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet">
<style>
    .dashboard-card {
        background: #fff;
        border-radius: 16px;
        box-shadow: 0 4px 16px rgba(30,60,114,0.10);
        padding: 28px 32px;
        margin-bottom: 24px;
        display: flex;
        align-items: center;
        gap: 18px;
    }
    .dashboard-card .icon {
        font-size: 2.5rem;
        color: #1e3c72;
        background: #f1f3fa;
        border-radius: 50%;
        padding: 16px;
    }
    .dashboard-card .value {
        font-size: 2rem;
        font-weight: 700;
        color: #1e3c72;
    }
    .dashboard-card .label {
        font-size: 1.1rem;
        color: #666;
    }
    .dashboard-section-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #1e3c72;
        margin: 32px 0 18px 0;
    }
    .user-list-table th, .user-list-table td {
        vertical-align: middle;
    }
</style>

<div class="container mt-4">
    
    <div class="row" id="dashboardCards">
        <!-- Dashboard kartları buraya gelecek -->
    </div>

    <div class="dashboard-section-title">Son 5 Kullanıcı</div>
    <div class="table-responsive">
        <table class="table table-striped user-list-table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Kullanıcı Adı</th>
                    <th>E-posta</th>
                    <th>Kayıt Tarihi</th>
                    <th>Roller</th>
                </tr>
            </thead>
            <tbody id="recentUsersTable">
                <!-- Son kullanıcılar buraya gelecek -->
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
<script>
$(async function() {
    const token = localStorage.getItem('token');
    if (!token) {
        window.location.href = '/Home/Login';
        return;
    }

    // Tüm kullanıcıları ve depolama bilgilerini çek
    const [users, storages] = await Promise.all([
        $.ajax({
            url: API_SETTINGS.BASE_URL + '/api/Admin/users',
            headers: { 'Authorization': 'Bearer ' + token }
        }),
        $.ajax({
            url: API_SETTINGS.BASE_URL + '/api/Admin/storage',
            headers: { 'Authorization': 'Bearer ' + token }
        })
    ]);

    // Toplam kullanıcı
    const totalUsers = users.length;
    // Toplam admin
    const totalAdmins = users.filter(u => u.roles && u.roles.some(r => r.toLowerCase() === 'admin')).length;
    // Son kayıt olan kullanıcı
    const lastUser = users.slice().sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0];
    // Son 5 kullanıcı
    const recentUsers = users.slice().sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)).slice(0, 5);

    // Depolama hesapları
    let totalStorage = 0, maxStorage = 0, maxUser = null;
    storages.forEach(s => {
        totalStorage += s.usedStorage || 0;
        if ((s.usedStorage || 0) > maxStorage) {
            maxStorage = s.usedStorage;
            maxUser = users.find(u => u.id === s.userId);
        }
    });
    const avgStorage = totalUsers ? totalStorage / totalUsers : 0;

    // Dashboard kartlarını oluştur
    $('#dashboardCards').html(`
        <div class="col-md-4">
            <div class="dashboard-card">
                <span class="icon"><i class="bi bi-people-fill"></i></span>
                <div>
                    <div class="value">${totalUsers}</div>
                    <div class="label">Toplam Kullanıcı</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="dashboard-card">
                <span class="icon"><i class="bi bi-person-badge-fill"></i></span>
                <div>
                    <div class="value">${totalAdmins}</div>
                    <div class="label">Toplam Admin</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="dashboard-card">
                <span class="icon"><i class="bi bi-hdd-stack-fill"></i></span>
                <div>
                    <div class="value">${formatFileSize(totalStorage)}</div>
                    <div class="label">Toplam Kullanılan Depolama</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="dashboard-card">
                <span class="icon"><i class="bi bi-bar-chart-fill"></i></span>
                <div>
                    <div class="value">${formatFileSize(avgStorage)}</div>
                    <div class="label">Kullanıcı Başına Ortalama Depolama</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="dashboard-card">
                <span class="icon"><i class="bi bi-person-plus-fill"></i></span>
                <div>
                    <div class="value">${lastUser ? lastUser.firstName + ' ' + lastUser.lastName : '-'}</div>
                    <div class="label">Son Kayıt Olan Kullanıcı</div>
                    <div class="label text-muted">${lastUser ? lastUser.email : ''}</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="dashboard-card">
                <span class="icon"><i class="bi bi-trophy-fill"></i></span>
                <div>
                    <div class="value">${maxUser ? (maxUser.firstName + ' ' + maxUser.lastName) : '-'}</div>
                    <div class="label">En Çok Depolama Kullanan</div>
                    <div class="label text-muted">${maxUser ? formatFileSize(maxStorage) : ''}</div>
                </div>
            </div>
        </div>
    `);

    // Son 5 kullanıcı tablosu
    $('#recentUsersTable').html(
        recentUsers.map((u, i) => `
            <tr>
                <td>${i+1}</td>
                <td>${u.firstName} ${u.lastName}</td>
                <td>${u.email}</td>
                <td>${u.createdAt ? new Date(u.createdAt).toLocaleDateString('tr-TR') : '-'}</td>
                <td>${u.roles ? u.roles.join(', ') : '-'}</td>
            </tr>
        `).join('')
    );

    function formatFileSize(bytes) {
        if (!bytes) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }
});
</script>
}

